generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://abhinav:12345678@localhost:5000/abhinav"
}

model User {
  id         String     @id @default(cuid())
  name       String
  email      String     @unique
  createdAt  DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt  DateTime   @updatedAt @map("updated_at") @db.Timestamp(6)
  progress   Progress[]
  enrolledIn Course[]   @relation("UserEnrollments")
}

model Course {
  id          String   @id @default(cuid())
  name        String
  description String?
  imageUrl    String?
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
  modules     Module[]
  students    User[]   @relation("UserEnrollments")
}

model Module {
  id          String     @id @default(cuid())
  name        String
  description String?
  content     String?
  order       Int
  courseId    String
  createdAt   DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime   @updatedAt @map("updated_at") @db.Timestamp(6)
  course      Course     @relation(fields: [courseId], references: [id], onDelete: Cascade)
  progress    Progress[]
  resources   Resource[]
}

model Resource {
  id        String   @id @default(cuid())
  name      String
  type      String
  url       String
  moduleId  String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
  module    Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)
}

model Progress {
  id        String   @id @default(cuid())
  userId    String
  moduleId  String
  completed Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
  module    Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, moduleId])
}
